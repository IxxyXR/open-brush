#!/usr/bin/env bash
# OpenBrush Quest support
# Cygwin script to run Quest app and capture the log.
# ADB docs: https://developer.android.com/studio/command-line/adb

usage () {
	echo "quest [-hbsiulr]"
	echo "	-h           : help"
	echo "	quest -rl  : log, run"
	exit 0
}

LOGFILE=${WORK_DIR:+$WORK_DIR/}adblog.txt
PACKAGE=com.Icosa.OpenBrush
BUILD_LOG=Build.log
ADB=

if [ ! -f $PACKAGE.apk ]; then
	echo "Package $PACKAGE not found"
	exit 1
fi

function get_adb_path ()
{
	if [ ! -f $BUILD_LOG ]; then
		echo "Missing $BUILD_LOG. Need this to find tools."
		exit 1
	fi
	# Find the adb path specified in the log and get the path.
	# Also strip off Windows CR line ending \r
	local ADBP=$(cygpath -u $(grep '^\sadb' $BUILD_LOG | sed 's/adb\s*:\s*//' | sed 's/\r//'))
	if [ -z $ADBP ]; then
		echo "ADB path not found in $BUILD_LOG."
		exit 1
	fi
	if [[ ! -x "$ADBP" ]]; then
		echo "ADB does not exist at $ADBP."
		exit 1
	fi
	export ADB=$ADBP
}

get_adb_path
$ADB devices

while getopts "hbsiulr" options; do
	case "$options" in
	h)	usage ;;
	s)  ADB=$(cygpath -u "$HOMEPATH\AppData\Roaming\SideQuest\platform-tools\adb.exe")
		echo "Use SideQuest ADB"
		;;
	i)	echo "Installing $PACKAGE..."
		$ADB shell am force-stop $PACKAGE
		$ADB install -r $PACKAGE.apk
		shift
		;;
	u)	echo "Uninstall $PACKAGE..."
		$ADB shell am force-stop $PACKAGE
		$ADB uninstall $PACKAGE.apk
		shift
		;;
	r) 	echo "Running $PACKAGE..."
		$ADB shell am force-stop $PACKAGE
		sleep 1
		$ADB shell am start -n $PACKAGE/com.unity3d.player.UnityPlayerActivity
		;;
	l)	echo "Capture log"
		$ADB logcat -s Unity > $LOGFILE
		;;
	b)	echo "Starting Baretail..."
		exec baretail $(cygpath -w $LOGFILE) &  # https://baremetalsoft.com/baretail/
		;;
	*) 	echo "Unknown option"
	  	exit 2
	  	;;
	esac
done
